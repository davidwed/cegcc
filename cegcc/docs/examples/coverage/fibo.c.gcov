        -:    0:Source:fibo.c
        -:    0:Graph:fibo.gcno
        -:    0:Data:fibo.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include <windows.h>
        -:    2:#include <stdio.h>
        -:    3:#include <stdlib.h>
        -:    4:#include <unistd.h>
        -:    5:
        -:    6:#define	FN	"/storage card/devel/fibo.txt"
        -:    7:
        -:    8:int fibo(int n)
    21871:    9:{
    21871:   10:	if (n < 3)
    21871:   10-block  0
    10945:   11:		return 1;
    10945:   11-block  0
    21871:   12:	return fibo(n-1) + fibo(n-2);
    10926:   12-block  0
    21871:   12-block  1
        -:   13:}
        -:   14:
        -:   15:int APIENTRY WinMain(HINSTANCE a,HINSTANCE b,LPWSTR c,int d)
        1:   16:{
        -:   17:	FILE	*f;
        -:   18:	int	i, r, len;
        -:   19:	wchar_t	*ws, buf[MAXPATHLEN];
        -:   20:	char	*s;
        -:   21:
        1:   22:	f = fopen(FN, "w");
        1:   22-block  0
        1:   23:	len = GetModuleFileNameW(NULL, buf, MAXPATHLEN);
        1:   24:	s = malloc(len+1);
        1:   25:	wcstombs(s, buf, len+1);
        1:   26:	fprintf(f, "Command [%s] ", s);
        1:   27:	ws = GetCommandLineW();
        1:   28:	len = wcslen(ws);
        1:   29:	s = malloc(len+1);
        1:   30:	wcstombs(s, ws, len+1);
        1:   31:	fprintf(f, "param [%s]\r\n", s);
        -:   32:
       20:   33:	for (i=1; i<20; i++) {
       20:   33-block  0
       19:   34:		r = fibo(i);
       19:   34-block  0
       19:   35:		fprintf(f, "fibo(%d) = %d\r\n", i, r);
        -:   36:	}
        1:   37:	fclose(f);
        1:   37-block  0
        1:   38:	exit(0);
        -:   39:}
