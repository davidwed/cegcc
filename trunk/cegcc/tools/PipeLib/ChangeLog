2009-12-12  Pedro Alves  <pedroalves@users.sourceforge.net>

	* TestClient/Makefile (TARGET): Default to arm-mingw32ce.
	* PipeTest/Makefile (TARGET): Default to arm-mingw32ce.

2009-12-12  Pedro Alves  <pedroalves@users.sourceforge.net>

	* Makefile (TARGET): Default to arm-mingw32ce.
	* PipeDev.cpp (LOG, LOGSCOPE): Avoid empty statement.

2007-09-02  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeLib.cpp (Read): Switch to IsBadWritePtr.  Only set last
	error to ERROR_BROKEN_PIPE if returning.
	(Write): Switch to IsBadReadPtr.

2007-07-02  Danny Backx  <dannybackx@users.sourceforge.net>
	    Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeLib.cpp (CreatePipe): Handle unexpected ActivateDevice
	failures.  Record last error as ERROR_TOO_MANY_OPEN_FILES when
	there aren't any pipe slots left.

2007-07-01  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeDev.cpp (Write): Remove breaknext and its usage.

2007-06-30  Pedro Alves  <pedro_alves@portugalmail.pt>

	* Makefile (download): Depend on all instead of only on
	PipeDev.dll.
	* PipeLib.h (PIPELIB_API): New define.
	(CreatePipe, GetPipeName, SetPipeTag): Use PIPELIB_API.
	* PipeLib.cpp: Include windows.h earlier.
	(GetPipeName, SetPipeTag, PeekNamedPipe): Use
	PIPELIB_API.
	(CreatePipe): Use PIPELIB_API.  Comment unused parameter names.

2007-06-29  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeLib: Delete.
	* PipeDev: Delete.

2007-06-29  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeLib/PipeLib.cpp: Move ...
	* PipeLib.cpp: ... here.  Include PipeDev.h instead of PipeDevice.h.
	* PipeLib/PipeLib.h: Move ...
	* PipeLib.h: ... here.
	* PipeDev/Makefile: Delete.
	* Makefile (all): Add libPipeLib.a.
	(PipeLib.o, libPipeLib.a, clean-dev, clean-lib): New rules.
	(clean): Depend on clean-dev and clean-lib to do the clean work.
	(.PHONY): Add clean-dev and clean-lib.

2007-06-29  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeDev/PipeDevice.cpp: Move ...
	* PipeDev.cpp: ... here.  Include PipeDev.h instead of PipeDevice.h.
	* PipeDev/PipeDevice.h: Move ...
	* PipeDev.h: ... here.
	* PipeDev/Makefile: Move ...
	* Makefile: ... here.
	(PipeDev_unstripped.dll): Depend on PipeDev.cpp and PipeDev.h.

2007-06-28  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeDev/PipeDevice.cpp (RecursiveCS): New implementation.
	(LockGuard): Better split the DEBUG_LOCKS version.
	(LockGuard::LockGuard) [DEBUG_LOCKS]: Prepend a "+" to the log output.

2007-06-28  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeDev/PipeDevice.cpp (FastCS): Delete.

2007-06-28  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeDev/PipeDevice.cpp (LogMessage2, LogMessage, LogScope)
	(LOG, LOGSCOPE): Move higher up in the file.
	(PipeDeviceContext::DeviceTag): New field.
	(PipeDeviceContext::TotalWritten, PipeDeviceContext::TotalRead)
	[DEBUG_MODE]: New fields.
	(PipeDeviceContext::~PipeDeviceContext): Free DeviceTag.
	(PipeDeviceContext::writeBytes(const void*, DWORD)): Change signature
	to ...
	(PipeDeviceContext::writeBytes(const BYTE*, DWORD)): ... this.
	Correct buffer wrapping.  Add written bytes to TotalWritten.
	(PipeDeviceContext::readBytes(void*, DWORD)): Change signature
	to ...
	(PipeDeviceContext::readBytes(BYTE*, DWORD)): ... this.
	Correct buffer wrapping.  Add read bytes to TotalRead.
	(LogThread) [DEBUG_MODE]: New function.
	(Init) [DEBUG_MODE]: Create a LogThread thread.  Also set the
	AbortEvent event when OpenCount is 0.
	(Read(PipeOpenContext*, LPVOID, DWORD)): Change signature to ...
	(Read(PipeOpenContext*, BYTE*, DWORD)): ... this.  Swap order of the
	wait events in the wait event array, so AbortEvent has priority.
	(Write(PipeOpenContext*, LPCVOID, DWORD)): Change signature to ...
	(Write(PipeOpenContext*, const BYTE*, DWORD)): ... this.  Swap order
	of the wait events in the wait event array, so AbortEvent has priority.
	(IOControl): On PIPE_IOCTL_SET_PIPE_TAG ioctl, record the debug
	DeviceTag.

2007-06-28  Pedro Alves  <pedro_alves@portugalmail.pt>

	* PipeLib/PipeLib.h (SetPipeTag): Declare.
	* PipeLib/PipeLib.cpp (SetPipeTag): Define.
	* PipeDev/PipeDevice.h (PIPE_IOCTL_SET_PIPE_TAG): Define.

2007-06-24  Pedro Alves  <pedro_alves@portugalmail.pt>

	* conformtest.c: New file.

2007-06-24  Pedro Alves  <pedro_alves@portugalmail.pt>
	Make PipeLib closer to desktop Windows Pipes.

	* PipeDev/Makefile (STRIP): New.
	(PipeDev.dll): Rename to ...
	(PipeDev_unstripped.dll): ... this. Add Makefile to dependencies.
	(PipeDev.dll): New rule for stripped version of PipeDev_unstripped.dll.
	(download): New rule.
	(.PHONY): Fix typo.  Add download.
	* PipeDev/PipeDevice.cpp (LogMessage2): New.
	(LogMessage): Provide more info.  Call LogMessage2.
	(LogScope::LogScope): Add MSG parameter.  Change output to ">".
	(LogScope::~LogScope): Change output to "<".
	(LogScope::msg_): New field.
	(LOG): New macro.
	(LOGSCOPE): Pass __FUNCTION__ and __LINE__.  Expect a char* as
	parameter.
	(GetDeviceHandle): Use new LOGSCOPE interface.
	(Init): Use new LOGSCOPE interface.  Use LOG.
	(Deinit): Likewise.
	(Open): Likewise.
	(DeactivatorData): Delete.
	(Deactivator): Change void* parameter to HANDLE. Use new LOGSCOPE
	interface.  Use LOG.  Adapt to get the device HANDLE directly from the
	parameter.
	(DeactivatePipeDevice): Use new LOGSCOPE interface.  Pass
	device->dev directly to CreateThread as start routine data.
	(Close): Use LOG.  Add a comment explaining why we deactivate the
	device in a separate thread.
	(Read): Use new LOGSCOPE interface.  Use LOG.  Return success if the
	pipe is broken but the buffer still has data.  Return success and
	don't block waiting for a Write if the read didn't fill the in buffer,
	but did get more than 0 bytes.  Add a few comments explaing the code.
	(Write): Use new LOGSCOPE interface.  Use LOG.  Use IsBadWritePtr
	instead of IsBadReadPtr.  Set ERROR_NO_DATA in case the pipe was
	broken.
	(Seek): Use new LOGSCOPE interface.
	(IOControl): Use new LOGSCOPE interface.  Use LOG.

2007-06-24  Pedro Alves  <pedro_alves@portugalmail.pt>

	* LICENSE, README, TODO: New files.

2007-06-09  Pedro Alves  <pedro_alves@portugalmail.pt>

	Initial import.

	* ChangeLog, PipeLib/Makefile, PipeLib/PipeLib.cpp,
	PipeLib/PipeLib.h, PipeDev/Makefile, PipeDev/PipeDevice.cpp,
	PipeDev/PipeDevice.h, PipeTest/Makefile, PipeTest/PipeTest.cpp,
	TestClient/Makefile, TestClient/TestClient.cpp: New files.

Local Variables:
mode: change-log
left-margin: 8
fill-column: 74
version-control: never
End:
