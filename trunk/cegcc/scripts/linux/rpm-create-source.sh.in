#!/bin/sh
if [ -r ./rpm-create-source.sh ]; then
	cd ../..
	TOP_SRCDIR=`pwd`
else
	TOP_SRCDIR=`pwd`
fi
#
export TOP_SRCDIR
#
# The name of this release
#
CEGCC_RELEASE=VerSION
export CEGCC_RELEASE
#
# Don't take unnecessary stuff in the source file.
#
echo '*/.svn*' >/tmp/exclude-$$
echo '/*.cvs*' >>/tmp/exclude-$$
echo '*/CVS' >>/tmp/exclude-$$
echo '*/CVS/*' >>/tmp/exclude-$$
echo 'cegcc-cegcc-'$CEGCC_RELEASE'/src/build-cegcc' >>/tmp/exclude-$$
echo 'cegcc-cegcc-'$CEGCC_RELEASE'/src/build-cegcc/*' >>/tmp/exclude-$$
echo 'cegcc-cegcc-'$CEGCC_RELEASE'/src/build-mingw32ce' >>/tmp/exclude-$$
echo 'cegcc-cegcc-'$CEGCC_RELEASE'/src/build-mingw32ce/*' >>/tmp/exclude-$$
echo 'cegcc-mingw32ce-'$CEGCC_RELEASE'/src/build-cegcc' >>/tmp/exclude-$$
echo 'cegcc-mingw32ce-'$CEGCC_RELEASE'/src/build-cegcc/*' >>/tmp/exclude-$$
echo 'cegcc-mingw32ce-'$CEGCC_RELEASE'/src/build-mingw32ce' >>/tmp/exclude-$$
echo 'cegcc-mingw32ce-'$CEGCC_RELEASE'/src/build-mingw32ce/*' >>/tmp/exclude-$$
echo '*~' >>/tmp/exclude-$$
#
cd $TOP_SRCDIR || exit 1
ln -s . cegcc-cegcc-$CEGCC_RELEASE || exit 1
tar --exclude-from=/tmp/exclude-$$ \
	-cz -f /usr/src/rpm/SOURCES/cegcc-cegcc-src-$CEGCC_RELEASE.tar.gz \
	cegcc-cegcc-$CEGCC_RELEASE/NEWS \
	cegcc-cegcc-$CEGCC_RELEASE/README \
	cegcc-cegcc-$CEGCC_RELEASE/scripts/linux/cegcc.spec \
	cegcc-cegcc-$CEGCC_RELEASE/docs \
	cegcc-cegcc-$CEGCC_RELEASE/website \
	cegcc-cegcc-$CEGCC_RELEASE/test \
	cegcc-cegcc-$CEGCC_RELEASE/src || exit 1
rm cegcc-cegcc-$CEGCC_RELEASE || exit 1
#
echo "Ready to build with"
echo " "
echo "	rm -rf /opt/cegcc/*"
echo "	rpmbuild -tb /usr/src/rpm/SOURCES/cegcc-cegcc-src-"$CEGCC_RELEASE".tar.gz"
echo "Note : " `ls -l /usr/src/rpm/SOURCES/cegcc-cegcc-src-"$CEGCC_RELEASE".tar.gz`
#
ln -s . cegcc-mingw32ce-$CEGCC_RELEASE || exit 1
tar --exclude-from=/tmp/exclude-$$ \
	-cz -f /usr/src/rpm/SOURCES/cegcc-mingw32ce-src-$CEGCC_RELEASE.tar.gz \
	cegcc-mingw32ce-$CEGCC_RELEASE/NEWS \
	cegcc-mingw32ce-$CEGCC_RELEASE/README \
	cegcc-mingw32ce-$CEGCC_RELEASE/scripts/linux/mingw32ce.spec \
	cegcc-mingw32ce-$CEGCC_RELEASE/docs \
	cegcc-mingw32ce-$CEGCC_RELEASE/website \
	cegcc-mingw32ce-$CEGCC_RELEASE/test \
	cegcc-mingw32ce-$CEGCC_RELEASE/src || exit 1
rm cegcc-mingw32ce-$CEGCC_RELEASE || exit 1
#
# Remove temp file
#
rm -f /tmp/exclude-$$
#
# Tell packager what to do.
#
echo " "
echo "	rm -rf /opt/mingw32ce/*"
echo "	rpmbuild -tb /usr/src/rpm/SOURCES/cegcc-mingw32ce-src-"$CEGCC_RELEASE".tar.gz"
echo "Note : " `ls -l /usr/src/rpm/SOURCES/cegcc-mingw32ce-src-"$CEGCC_RELEASE".tar.gz`
echo " "
#
# Gdb
#
FTP_DIR=$TOP_SRCDIR/src/ftp
GDB_VERSION=gdb-6.8
GDB_SUFFIX=.tar.bz2
GDB_URL="ftp://ftp.gnu.org/pub/gnu/gdb"/$GDB_VERSION$GDB_SUFFIX
#
if [ ! -r $FTP_DIR/$GDB_VERSION$GDB_SUFFIX.ok ]; then
	wget -O $FTP_DIR/$GDB_VERSION$GDB_SUFFIX -c $GDB_URL
	if [ $? -eq 0 ]; then
		touch $FTP_DIR/$GDB_VERSION$GDB_SUFFIX.ok
	else
		echo "Could not get $GDB_VERSION, exiting"
		exit 1
	fi
fi
#
# Unpack gdb in /tmp
mkdir /tmp/gdb-$$ || exit 1
cd /tmp/gdb-$$ || exit 1
tar xfj $FTP_DIR/$GDB_VERSION$GDB_SUFFIX || exit 1
#
# Apply our patch if it's there
#
if [ -r $FTP_DIR/gdb-6.8-i386gdbserver.patch ]; then
	patch $FTP_DIR/gdb-6.8-i386gdbserver.patch || exit 1
fi
#
cp $TOP_SRCDIR/scripts/linux/gdb-mingw32ce-arm.spec $GDB_VERSION || exit 1
ln -s $GDB_VERSION gdb-mingw32ce-arm-VerSION || exit 1
tar cfz /usr/src/rpm/SOURCES/gdb-mingw32ce-arm-VerSION-src.tar.gz gdb-mingw32ce-arm-VerSION/* || exit 1
rm -f $GDB_VERSION/gdb-mingw32ce-arm.spec || exit 1
cp $TOP_SRCDIR/scripts/linux/gdb-mingw32ce-i386.spec $GDB_VERSION || exit 1
ln -s $GDB_VERSION gdb-mingw32ce-i386-VerSION || exit 1
tar cfz /usr/src/rpm/SOURCES/gdb-mingw32ce-i386-VerSION-src.tar.gz gdb-mingw32ce-i386-VerSION/* || exit 1
cd $TOP_SRCDIR || exit 1
rm -rf /tmp/gdb-$$
#
# All done
#
exit 0
